<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Admin', 'doctrine');

/**
 * BaseAdmin
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $email
 * @property string $password
 * @property string $mod_permissions
 * @property string $cat_permissions
 * @property timestamp $logged_at
 * @property integer $sort
 * @property boolean $is_active
 * @property boolean $is_featured
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $created_aid
 * @property integer $updated_aid
 * @property Doctrine_Collection $Banner
 * @property Doctrine_Collection $Banner_2
 * @property Doctrine_Collection $Category
 * @property Doctrine_Collection $Category_2
 * @property Doctrine_Collection $CategoryContent
 * @property Doctrine_Collection $CategoryContent_4
 * @property Doctrine_Collection $Client
 * @property Doctrine_Collection $Client_2
 * @property Doctrine_Collection $Content
 * @property Doctrine_Collection $Content_2
 * @property Doctrine_Collection $Image
 * @property Doctrine_Collection $Image_3
 * @property Doctrine_Collection $Page
 * @property Doctrine_Collection $Page_2
 * @property Doctrine_Collection $Poll
 * @property Doctrine_Collection $Poll_2
 * @property Doctrine_Collection $PollOption
 * @property Doctrine_Collection $PollOption_3
 * @property Doctrine_Collection $PollOption_2
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method string              getEmail()             Returns the current record's "email" value
 * @method string              getPassword()          Returns the current record's "password" value
 * @method string              getModPermissions()    Returns the current record's "mod_permissions" value
 * @method string              getCatPermissions()    Returns the current record's "cat_permissions" value
 * @method timestamp           getLoggedAt()          Returns the current record's "logged_at" value
 * @method integer             getSort()              Returns the current record's "sort" value
 * @method boolean             getIsActive()          Returns the current record's "is_active" value
 * @method boolean             getIsFeatured()        Returns the current record's "is_featured" value
 * @method timestamp           getCreatedAt()         Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()         Returns the current record's "updated_at" value
 * @method integer             getCreatedAid()        Returns the current record's "created_aid" value
 * @method integer             getUpdatedAid()        Returns the current record's "updated_aid" value
 * @method Doctrine_Collection getBanner()            Returns the current record's "Banner" collection
 * @method Doctrine_Collection getBanner2()           Returns the current record's "Banner_2" collection
 * @method Doctrine_Collection getCategory()          Returns the current record's "Category" collection
 * @method Doctrine_Collection getCategory2()         Returns the current record's "Category_2" collection
 * @method Doctrine_Collection getCategoryContent()   Returns the current record's "CategoryContent" collection
 * @method Doctrine_Collection getCategoryContent4()  Returns the current record's "CategoryContent_4" collection
 * @method Doctrine_Collection getClient()            Returns the current record's "Client" collection
 * @method Doctrine_Collection getClient2()           Returns the current record's "Client_2" collection
 * @method Doctrine_Collection getContent()           Returns the current record's "Content" collection
 * @method Doctrine_Collection getContent2()          Returns the current record's "Content_2" collection
 * @method Doctrine_Collection getImage()             Returns the current record's "Image" collection
 * @method Doctrine_Collection getImage3()            Returns the current record's "Image_3" collection
 * @method Doctrine_Collection getPage()              Returns the current record's "Page" collection
 * @method Doctrine_Collection getPage2()             Returns the current record's "Page_2" collection
 * @method Doctrine_Collection getPoll()              Returns the current record's "Poll" collection
 * @method Doctrine_Collection getPoll2()             Returns the current record's "Poll_2" collection
 * @method Doctrine_Collection getPollOption()        Returns the current record's "PollOption" collection
 * @method Doctrine_Collection getPollOption3()       Returns the current record's "PollOption_3" collection
 * @method Doctrine_Collection getPollOption2()       Returns the current record's "PollOption_2" collection
 * @method Admin               setId()                Sets the current record's "id" value
 * @method Admin               setEmail()             Sets the current record's "email" value
 * @method Admin               setPassword()          Sets the current record's "password" value
 * @method Admin               setModPermissions()    Sets the current record's "mod_permissions" value
 * @method Admin               setCatPermissions()    Sets the current record's "cat_permissions" value
 * @method Admin               setLoggedAt()          Sets the current record's "logged_at" value
 * @method Admin               setSort()              Sets the current record's "sort" value
 * @method Admin               setIsActive()          Sets the current record's "is_active" value
 * @method Admin               setIsFeatured()        Sets the current record's "is_featured" value
 * @method Admin               setCreatedAt()         Sets the current record's "created_at" value
 * @method Admin               setUpdatedAt()         Sets the current record's "updated_at" value
 * @method Admin               setCreatedAid()        Sets the current record's "created_aid" value
 * @method Admin               setUpdatedAid()        Sets the current record's "updated_aid" value
 * @method Admin               setBanner()            Sets the current record's "Banner" collection
 * @method Admin               setBanner2()           Sets the current record's "Banner_2" collection
 * @method Admin               setCategory()          Sets the current record's "Category" collection
 * @method Admin               setCategory2()         Sets the current record's "Category_2" collection
 * @method Admin               setCategoryContent()   Sets the current record's "CategoryContent" collection
 * @method Admin               setCategoryContent4()  Sets the current record's "CategoryContent_4" collection
 * @method Admin               setClient()            Sets the current record's "Client" collection
 * @method Admin               setClient2()           Sets the current record's "Client_2" collection
 * @method Admin               setContent()           Sets the current record's "Content" collection
 * @method Admin               setContent2()          Sets the current record's "Content_2" collection
 * @method Admin               setImage()             Sets the current record's "Image" collection
 * @method Admin               setImage3()            Sets the current record's "Image_3" collection
 * @method Admin               setPage()              Sets the current record's "Page" collection
 * @method Admin               setPage2()             Sets the current record's "Page_2" collection
 * @method Admin               setPoll()              Sets the current record's "Poll" collection
 * @method Admin               setPoll2()             Sets the current record's "Poll_2" collection
 * @method Admin               setPollOption()        Sets the current record's "PollOption" collection
 * @method Admin               setPollOption3()       Sets the current record's "PollOption_3" collection
 * @method Admin               setPollOption2()       Sets the current record's "PollOption_2" collection
 * 
 * @package    imdb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAdmin extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('admin');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('mod_permissions', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('cat_permissions', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('logged_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('sort', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('is_featured', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_aid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('updated_aid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Banner', array(
             'local' => 'id',
             'foreign' => 'created_aid'));

        $this->hasMany('Banner as Banner_2', array(
             'local' => 'id',
             'foreign' => 'updated_aid'));

        $this->hasMany('Category', array(
             'local' => 'id',
             'foreign' => 'created_aid'));

        $this->hasMany('Category as Category_2', array(
             'local' => 'id',
             'foreign' => 'updated_aid'));

        $this->hasMany('CategoryContent', array(
             'local' => 'id',
             'foreign' => 'created_aid'));

        $this->hasMany('CategoryContent as CategoryContent_4', array(
             'local' => 'id',
             'foreign' => 'updated_aid'));

        $this->hasMany('Client', array(
             'local' => 'id',
             'foreign' => 'created_aid'));

        $this->hasMany('Client as Client_2', array(
             'local' => 'id',
             'foreign' => 'updated_aid'));

        $this->hasMany('Content', array(
             'local' => 'id',
             'foreign' => 'created_aid'));

        $this->hasMany('Content as Content_2', array(
             'local' => 'id',
             'foreign' => 'updated_aid'));

        $this->hasMany('Image', array(
             'local' => 'id',
             'foreign' => 'created_aid'));

        $this->hasMany('Image as Image_3', array(
             'local' => 'id',
             'foreign' => 'updated_aid'));

        $this->hasMany('Page', array(
             'local' => 'id',
             'foreign' => 'created_aid'));

        $this->hasMany('Page as Page_2', array(
             'local' => 'id',
             'foreign' => 'updated_aid'));

        $this->hasMany('Poll', array(
             'local' => 'id',
             'foreign' => 'created_aid'));

        $this->hasMany('Poll as Poll_2', array(
             'local' => 'id',
             'foreign' => 'updated_aid'));

        $this->hasMany('PollOption', array(
             'local' => 'id',
             'foreign' => 'created_aid'));

        $this->hasMany('PollOption as PollOption_3', array(
             'local' => 'id',
             'foreign' => 'created_aid'));

        $this->hasMany('PollOption as PollOption_2', array(
             'local' => 'id',
             'foreign' => 'updated_aid'));
    }
}