<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Content', 'doctrine');

/**
 * BaseContent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property string $route
 * @property string $cover
 * @property string $intro
 * @property string $body
 * @property string $source
 * @property string $source_link
 * @property integer $sort
 * @property integer $nb_views
 * @property integer $nb_love
 * @property integer $nb_comment
 * @property integer $is_active
 * @property integer $is_new
 * @property integer $is_top
 * @property integer $is_featured
 * @property integer $ask18
 * @property timestamp $post_at
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $created_aid
 * @property integer $updated_aid
 * @property string $keywords
 * @property Admin $Admin
 * @property Admin $Admin_2
 * @property Doctrine_Collection $CategoryContent
 * @property Doctrine_Collection $Image
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method string              getTitle()           Returns the current record's "title" value
 * @method string              getRoute()           Returns the current record's "route" value
 * @method string              getCover()           Returns the current record's "cover" value
 * @method string              getIntro()           Returns the current record's "intro" value
 * @method string              getBody()            Returns the current record's "body" value
 * @method string              getSource()          Returns the current record's "source" value
 * @method string              getSourceLink()      Returns the current record's "source_link" value
 * @method integer             getSort()            Returns the current record's "sort" value
 * @method integer             getNbViews()         Returns the current record's "nb_views" value
 * @method integer             getNbLove()          Returns the current record's "nb_love" value
 * @method integer             getNbComment()       Returns the current record's "nb_comment" value
 * @method integer             getIsActive()        Returns the current record's "is_active" value
 * @method integer             getIsNew()           Returns the current record's "is_new" value
 * @method integer             getIsTop()           Returns the current record's "is_top" value
 * @method integer             getIsFeatured()      Returns the current record's "is_featured" value
 * @method integer             getAsk18()           Returns the current record's "ask18" value
 * @method timestamp           getPostAt()          Returns the current record's "post_at" value
 * @method timestamp           getCreatedAt()       Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()       Returns the current record's "updated_at" value
 * @method integer             getCreatedAid()      Returns the current record's "created_aid" value
 * @method integer             getUpdatedAid()      Returns the current record's "updated_aid" value
 * @method string              getKeywords()        Returns the current record's "keywords" value
 * @method Admin               getAdmin()           Returns the current record's "Admin" value
 * @method Admin               getAdmin2()          Returns the current record's "Admin_2" value
 * @method Doctrine_Collection getCategoryContent() Returns the current record's "CategoryContent" collection
 * @method Doctrine_Collection getImage()           Returns the current record's "Image" collection
 * @method Content             setId()              Sets the current record's "id" value
 * @method Content             setTitle()           Sets the current record's "title" value
 * @method Content             setRoute()           Sets the current record's "route" value
 * @method Content             setCover()           Sets the current record's "cover" value
 * @method Content             setIntro()           Sets the current record's "intro" value
 * @method Content             setBody()            Sets the current record's "body" value
 * @method Content             setSource()          Sets the current record's "source" value
 * @method Content             setSourceLink()      Sets the current record's "source_link" value
 * @method Content             setSort()            Sets the current record's "sort" value
 * @method Content             setNbViews()         Sets the current record's "nb_views" value
 * @method Content             setNbLove()          Sets the current record's "nb_love" value
 * @method Content             setNbComment()       Sets the current record's "nb_comment" value
 * @method Content             setIsActive()        Sets the current record's "is_active" value
 * @method Content             setIsNew()           Sets the current record's "is_new" value
 * @method Content             setIsTop()           Sets the current record's "is_top" value
 * @method Content             setIsFeatured()      Sets the current record's "is_featured" value
 * @method Content             setAsk18()           Sets the current record's "ask18" value
 * @method Content             setPostAt()          Sets the current record's "post_at" value
 * @method Content             setCreatedAt()       Sets the current record's "created_at" value
 * @method Content             setUpdatedAt()       Sets the current record's "updated_at" value
 * @method Content             setCreatedAid()      Sets the current record's "created_aid" value
 * @method Content             setUpdatedAid()      Sets the current record's "updated_aid" value
 * @method Content             setKeywords()        Sets the current record's "keywords" value
 * @method Content             setAdmin()           Sets the current record's "Admin" value
 * @method Content             setAdmin2()          Sets the current record's "Admin_2" value
 * @method Content             setCategoryContent() Sets the current record's "CategoryContent" collection
 * @method Content             setImage()           Sets the current record's "Image" collection
 * 
 * @package    imdb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('content');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', 1000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1000,
             ));
        $this->hasColumn('route', 'string', 1000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1000,
             ));
        $this->hasColumn('cover', 'string', 1000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1000,
             ));
        $this->hasColumn('intro', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('body', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('source', 'string', 1000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1000,
             ));
        $this->hasColumn('source_link', 'string', 1000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1000,
             ));
        $this->hasColumn('sort', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('nb_views', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('nb_love', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('nb_comment', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_new', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_top', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_featured', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('ask18', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('post_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_aid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('updated_aid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('keywords', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Admin', array(
             'local' => 'created_aid',
             'foreign' => 'id'));

        $this->hasOne('Admin as Admin_2', array(
             'local' => 'updated_aid',
             'foreign' => 'id'));

        $this->hasMany('CategoryContent', array(
             'local' => 'id',
             'foreign' => 'content_id'));

        $this->hasMany('Image', array(
             'local' => 'id',
             'foreign' => 'content_id'));
    }
}