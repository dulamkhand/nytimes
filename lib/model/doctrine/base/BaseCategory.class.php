<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Category', 'doctrine');

/**
 * BaseCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $route
 * @property integer $sort
 * @property integer $is_active
 * @property timestamp $updated_at
 * @property timestamp $created_at
 * @property integer $created_aid
 * @property integer $updated_aid
 * @property Admin $Admin
 * @property Admin $Admin_2
 * @property Doctrine_Collection $CategoryContent
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method string              getName()            Returns the current record's "name" value
 * @method string              getRoute()           Returns the current record's "route" value
 * @method integer             getSort()            Returns the current record's "sort" value
 * @method integer             getIsActive()        Returns the current record's "is_active" value
 * @method timestamp           getUpdatedAt()       Returns the current record's "updated_at" value
 * @method timestamp           getCreatedAt()       Returns the current record's "created_at" value
 * @method integer             getCreatedAid()      Returns the current record's "created_aid" value
 * @method integer             getUpdatedAid()      Returns the current record's "updated_aid" value
 * @method Admin               getAdmin()           Returns the current record's "Admin" value
 * @method Admin               getAdmin2()          Returns the current record's "Admin_2" value
 * @method Doctrine_Collection getCategoryContent() Returns the current record's "CategoryContent" collection
 * @method Category            setId()              Sets the current record's "id" value
 * @method Category            setName()            Sets the current record's "name" value
 * @method Category            setRoute()           Sets the current record's "route" value
 * @method Category            setSort()            Sets the current record's "sort" value
 * @method Category            setIsActive()        Sets the current record's "is_active" value
 * @method Category            setUpdatedAt()       Sets the current record's "updated_at" value
 * @method Category            setCreatedAt()       Sets the current record's "created_at" value
 * @method Category            setCreatedAid()      Sets the current record's "created_aid" value
 * @method Category            setUpdatedAid()      Sets the current record's "updated_aid" value
 * @method Category            setAdmin()           Sets the current record's "Admin" value
 * @method Category            setAdmin2()          Sets the current record's "Admin_2" value
 * @method Category            setCategoryContent() Sets the current record's "CategoryContent" collection
 * 
 * @package    imdb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('category');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('route', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('sort', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_aid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('updated_aid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Admin', array(
             'local' => 'created_aid',
             'foreign' => 'id'));

        $this->hasOne('Admin as Admin_2', array(
             'local' => 'updated_aid',
             'foreign' => 'id'));

        $this->hasMany('CategoryContent', array(
             'local' => 'id',
             'foreign' => 'category_id'));
    }
}